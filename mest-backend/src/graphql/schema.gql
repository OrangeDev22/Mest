# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type MovieType {
  id: ID!
  adult: Boolean!
  backdrop_path: String!
  title: String!
  original_language: String!
  original_title: String!
  overview: String!
  poster_path: String!
  media_type: String!
  genre_ids: [ID!]
  popularity: Float!
  release_date: String!
  video: Boolean!
  vote_average: Float!
  vote_count: Float!
}

type MovieClip {
  id: ID!
  iso_639_1: String!
  iso_3166_1: String!
  name: String!
  key: String!
  site: String!
  size: Float!
  type: String!
  official: Boolean!
  published_at: String
}

type CastMember {
  adult: Boolean!
  gender: Int!
  id: Int!
  known_for_department: String!
  name: String!
  original_name: String!
  popularity: Float!
  profile_path: String
  cast_id: Int!
  character: String!
  credit_id: String!
  order: Int!
  job: String
}

type ProductionCompany {
  id: ID!
  name: String!
}

type Genre {
  id: ID!
  name: String!
}

type MovieResponseType {
  id: ID!
  adult: Boolean!
  backdrop_path: String!
  title: String!
  original_language: String!
  original_title: String!
  overview: String!
  poster_path: String!
  media_type: String!
  genre_ids: [ID!]
  popularity: Float!
  release_date: String!
  video: Boolean!
  vote_average: Float!
  vote_count: Float!
  genres: [Genre!]
  production_companies: [ProductionCompany!]
}

type MovieSearchResponse {
  movies: [MovieType!]!
  total_pages: Int!
}

type User {
  auth0Id: String!
  id: Int!
  nickName: String!
  name: String!
  email: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type FavoriteMovie {
  title: String!
  poster_path: String!
  id: Int!
  movieId: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type CreateFavoriteMovie {
  title: String!
  poster_path: String!
  id: Int!
  movieId: String!
  userId: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type RemoveFavoriteMovie {
  id: Int!
}

type Query {
  searchMovie(search: String!, page: Float = 1): MovieSearchResponse!
  getTrendingMovies(page: Float!): MovieSearchResponse!
  getOneMmovie(id: ID!): MovieResponseType!
  getSimilarMovies(id: ID!): [MovieType!]!
  getTopTrendingMovies: [MovieType!]!
  getMovieClips(id: ID!): [MovieClip!]!
  getMovieCast(id: Int!): [CastMember!]!
  getAllUsers: [User!]!
  getOneUser(id: Float!): User!
  getOneByAuth0IdUser(authId: String!): User!
  favoriteMovies: [FavoriteMovie!]!
  favoriteMovie(id: Int!): FavoriteMovie!
}

type Mutation {
  createUser(createUserInput: CreateUserInput!): User!
  updateUser(updateUserInput: UpdateUserInput!): User!
  deleteUser(id: Float!): User!
  createFavoriteMovie(createFavoriteMovieInput: CreateFavoriteMovieInput!): CreateFavoriteMovie!
  updateFavoriteMovie(updateFavoriteMovieInput: UpdateFavoriteMovieInput!): FavoriteMovie!
  removeFavoriteMovie(id: Int!): RemoveFavoriteMovie!
}

input CreateUserInput {
  auth0Id: String!
  nickName: String!
  name: String!
  email: String!
}

input UpdateUserInput {
  auth0Id: String
  nickName: String
  name: String
  email: String
  id: Int!
}

input CreateFavoriteMovieInput {
  movieId: String!
}

input UpdateFavoriteMovieInput {
  movieId: String
  id: Int!
}